parameters:
  - name: targetUrl
    type: string
  - name: port
    type: number
  - name: results
    type: string
steps:
#- task: NuGetToolInstaller@1

# Currently not working with current plugin
# - task: owaspzap@1
#   inputs:
#     scantype: 'targetedScan'
#     url: '${{parameters.targetUrl}}'
#     port: ${{parameters.port}}

# https://dzone.com/articles/owasp-zap-security-tests-in-azure-devops-pipeline
# https://www.zaproxy.org/docs/docker/baseline-scan/
# https://www.zaproxy.org/docs/docker/api-scan/
# https://www.zaproxy.org/docs/docker/full-scan/
# targetedScan = zap-baseline.py
# agressive scan?=zap-full-scan.py
# zap-api-scan.py

- task: Bash@3
  displayName: OWASP ZAP Scan via bash script
  inputs:
    targetType: 'inline'
    script: |
      # OWASP ZAP Scan because plugin has Url formatting issues
      mkdir owaspzap && cd "$_"
      chmod -R 777  ./
      docker run -u 0 -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t ${{parameters.targetUrl}} -J report.json -r report.html -I

- bash: |
   sudo npm install -g handlebars-cmd

   cat <<EOF > owaspzap/nunit-template.hbs
   {{#each site}}

   <test-run
       id="2"
       name="Owasp test"
       start-time="{{../[@generated]}}"  >
       <test-suite
           id="{{@index}}"
           type="Assembly"
           name="{{[@name]}}"
           result="Failed"
           failed="{{alerts.length}}">
           <attachments>
               <attachment>
                   <filePath>$BUILD_SOURCESDIRECTORY/owaspzap/report.html</filePath>
               </attachment>
           </attachments>
       {{#each alerts}}<test-case
           id="{{@index}}"
           name="{{alert}}"
           result="Failed"
           fullname="{{alert}}"
           time="1">
               <failure>
                   <message>
                       <![CDATA[{{{desc}}}]]>
                   </message>
                   <stack-trace>
                       <![CDATA[
   Solution:
   {{{solution}}}

   Reference:
   {{{reference}}}

   instances:{{#each instances}}
   * {{uri}}
       - {{method}}
       {{#if evidence}}- {{{evidence}}}{{/if}}
                       {{/each}}]]>
                   </stack-trace>
               </failure>
       </test-case>
       {{/each}}
       </test-suite>
   </test-run>
   {{/each}}
   EOF
  displayName: 'owasp nunit template'
  condition: always()
- bash: ' handlebars owaspzap/report.json < owaspzap/nunit-template.hbs > owaspzap/${{parameters.results}}-test-results.xml'
  displayName: 'generate nunit type file'
  condition: always()
- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TEST-*.xml'
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: 'owaspzap/${{parameters.results}}-test-results.xml'
    testRunTitle: 'OWASP ZAP Baseline Test Run'
  condition: always()
